name: Release

on:
  push:
    tags: ['*']

env:
  CARGO_TERM_COLOR: always
  NIGHTLY_TOOLCHAIN_VERSION: ${{ secrets.NIGHTLY_TOOLCHAIN_VERSION }}

jobs:
  prepare:
    name: Get version
    runs-on: ubuntu-latest
    steps:
      - id: version
        run: echo "VERSION=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_OUTPUT

      - name: Show version
        run: echo ${{ steps.version.outputs.VERSION }}

    outputs:
      version: ${{ steps.version.outputs.VERSION }}

  build:
    name: Build
    needs: prepare
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache
        uses: Swatinem/rust-cache@v2

      - name: Remove binaries from cache
        run: rm -vfr target/wasm32-unknown-unknown/*

      - name: Show specific nightly version
        if: ${{ env.NIGHTLY_TOOLCHAIN_VERSION != '' }}
        run: echo $NIGHTLY_TOOLCHAIN_VERSION | sed 's/-/ - /g'

      - name: Install specific nightly toolchain
        run: make init

      - name: Build
        run: make build

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          path: |
            target/wasm32-unknown-unknown/*
            *.meta.txt

  publish:
    name: Publish binaries
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download artifacts
        uses: actions/download-artifact@v3

      - name: Rename binaries
        run: |
          cd artifact/target/wasm32-unknown-unknown
          for WASM in */*; do
            BUILD_TYPE=${WASM%/*}
            NAME=`basename $WASM`
            if [[ $NAME == *.opt.wasm ]]; then
              NAME=${NAME%.opt.wasm}
              EXT=opt.wasm
            elif [[ $NAME == *.meta.wasm ]]; then
              NAME=${NAME%.meta.wasm}
              EXT=meta.wasm
            else
              NAME=${NAME%.wasm}
              EXT=wasm
            fi
            if [ $BUILD_TYPE == debug ]; then
              mv $WASM $NAME.debug.$EXT
            else
              mv $WASM $NAME.$EXT
            fi
          done

      - name: Publish
        uses: softprops/action-gh-release@v1
        with:
          files: artifact/**
          body_path: CHANGELOG.md # TODO: Cut piece related to the current version only
